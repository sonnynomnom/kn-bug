{
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/sonny/Desktop/karaokenite/src/server/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/sonny/Desktop/karaokenite\",\"filename\":\"/Users/sonny/Desktop/karaokenite/src/server/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/sonny/Desktop/karaokenite\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/sonny/Desktop/karaokenite/src/server/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/sonny/Desktop/karaokenite",
      "filename": "/Users/sonny/Desktop/karaokenite/src/server/index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/sonny/Desktop/karaokenite",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/sonny/Desktop/karaokenite/src/server/index.js",
        "plugins": [
          "jsx",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/sonny/Desktop/karaokenite/src/server/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/sonny/Desktop/karaokenite/src/server/",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _http = _interopRequireDefault(require(\"http\"));\n\nvar _express = require(\"express\");\n\nvar _url = require(\"url\");\n\nvar _uuid = require(\"uuid\");\n\nvar _next = _interopRequireDefault(require(\"next\"));\n\nvar _rooms2 = require(\"./rooms\");\n\nvar _store = require(\"../state/store\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar nextApp = (0, _next[\"default\"])({\n  dev: process.env.NODE_ENV !== 'production'\n});\nvar handler = nextApp.getRequestHandler();\nnextApp.prepare().then(function () {\n  var clientRouter = (0, _express.Router)();\n  clientRouter.get('/*', function (req, res) {\n    var parsedUrl = (0, _url.parse)(req.url, true);\n    var pathname = parsedUrl.pathname,\n        query = parsedUrl.query;\n\n    if (pathname === '/create-room') {\n      console.log('Room Creation');\n      var id = (0, _uuid.v4)();\n      (0, _store.dispatch)({\n        type: 'CREATE_ROOM',\n        payload: {\n          id: id,\n          hostId: query.username\n        }\n      });\n      res.redirect(\"room/\".concat(id));\n    } else if (pathname.includes('/room')) {\n      var _pathname$split = pathname.split('/'),\n          _pathname$split2 = _slicedToArray(_pathname$split, 3),\n          _id = _pathname$split2[2];\n\n      var _rooms = (0, _store.getState)('byId');\n\n      nextApp.render(req, res, pathname);\n    } else {\n      handler(req, res, pathname);\n    }\n  }); // Get port or default to 8080\n\n  var port = process.env.PORT || 3000;\n\n  var express = require('express');\n\n  var app = express();\n\n  var webServer = _http[\"default\"].createServer(app);\n\n  var io = require('socket.io')(webServer);\n\n  app.use('/', clientRouter); // listen for requests :)\n  // Upgrades the server to accept websockets:\n\n  var rooms = io.sockets.adapter.rooms;\n  io.on('connection', function (socket) {\n    return (0, _rooms2.initializeRooms)(socket, rooms, _store.getState);\n  });\n  webServer.listen(port, function () {\n    console.log('listening on http://localhost:' + port);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm5leHRBcHAiLCJkZXYiLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJoYW5kbGVyIiwiZ2V0UmVxdWVzdEhhbmRsZXIiLCJwcmVwYXJlIiwidGhlbiIsImNsaWVudFJvdXRlciIsImdldCIsInJlcSIsInJlcyIsInBhcnNlZFVybCIsInVybCIsInBhdGhuYW1lIiwicXVlcnkiLCJjb25zb2xlIiwibG9nIiwiaWQiLCJ0eXBlIiwicGF5bG9hZCIsImhvc3RJZCIsInVzZXJuYW1lIiwicmVkaXJlY3QiLCJpbmNsdWRlcyIsInNwbGl0Iiwicm9vbXMiLCJyZW5kZXIiLCJwb3J0IiwiUE9SVCIsImV4cHJlc3MiLCJyZXF1aXJlIiwiYXBwIiwid2ViU2VydmVyIiwiaHR0cCIsImNyZWF0ZVNlcnZlciIsImlvIiwidXNlIiwic29ja2V0cyIsImFkYXB0ZXIiLCJvbiIsInNvY2tldCIsImdldFN0YXRlIiwibGlzdGVuIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsSUFBTUEsT0FBTyxHQUFHLHNCQUFLO0FBQ25CQyxFQUFBQSxHQUFHLEVBQUVDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxRQUFaLEtBQXlCO0FBRFgsQ0FBTCxDQUFoQjtBQUlBLElBQU1DLE9BQU8sR0FBR0wsT0FBTyxDQUFDTSxpQkFBUixFQUFoQjtBQUNBTixPQUFPLENBQUNPLE9BQVIsR0FBa0JDLElBQWxCLENBQXVCLFlBQU07QUFDM0IsTUFBTUMsWUFBWSxHQUFHLHNCQUFyQjtBQUNBQSxFQUFBQSxZQUFZLENBQUNDLEdBQWIsQ0FBaUIsSUFBakIsRUFBdUIsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDbkMsUUFBTUMsU0FBUyxHQUFHLGdCQUFNRixHQUFHLENBQUNHLEdBQVYsRUFBZSxJQUFmLENBQWxCO0FBQ0EsUUFBUUMsUUFBUixHQUE0QkYsU0FBNUIsQ0FBUUUsUUFBUjtBQUFBLFFBQWtCQyxLQUFsQixHQUE0QkgsU0FBNUIsQ0FBa0JHLEtBQWxCOztBQUNBLFFBQUlELFFBQVEsS0FBSyxjQUFqQixFQUFpQztBQUMvQkUsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksZUFBWjtBQUNBLFVBQU1DLEVBQUUsR0FBRyxlQUFYO0FBQ0EsMkJBQVM7QUFDUEMsUUFBQUEsSUFBSSxFQUFFLGFBREM7QUFFUEMsUUFBQUEsT0FBTyxFQUFFO0FBQUVGLFVBQUFBLEVBQUUsRUFBRkEsRUFBRjtBQUFNRyxVQUFBQSxNQUFNLEVBQUVOLEtBQUssQ0FBQ087QUFBcEI7QUFGRixPQUFUO0FBSUFYLE1BQUFBLEdBQUcsQ0FBQ1ksUUFBSixnQkFBcUJMLEVBQXJCO0FBQ0QsS0FSRCxNQVFPLElBQUlKLFFBQVEsQ0FBQ1UsUUFBVCxDQUFrQixPQUFsQixDQUFKLEVBQWdDO0FBQ3JDLDRCQUFpQlYsUUFBUSxDQUFDVyxLQUFULENBQWUsR0FBZixDQUFqQjtBQUFBO0FBQUEsVUFBV1AsR0FBWDs7QUFDQSxVQUFNUSxNQUFLLEdBQUcscUJBQVMsTUFBVCxDQUFkOztBQUVBM0IsTUFBQUEsT0FBTyxDQUFDNEIsTUFBUixDQUFlakIsR0FBZixFQUFvQkMsR0FBcEIsRUFBeUJHLFFBQXpCO0FBQ0QsS0FMTSxNQUtBO0FBQ0xWLE1BQUFBLE9BQU8sQ0FBQ00sR0FBRCxFQUFNQyxHQUFOLEVBQVdHLFFBQVgsQ0FBUDtBQUNEO0FBQ0YsR0FuQkQsRUFGMkIsQ0F1QjNCOztBQUNBLE1BQU1jLElBQUksR0FBRzNCLE9BQU8sQ0FBQ0MsR0FBUixDQUFZMkIsSUFBWixJQUFvQixJQUFqQzs7QUFFQSxNQUFNQyxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLE1BQU1DLEdBQUcsR0FBR0YsT0FBTyxFQUFuQjs7QUFFQSxNQUFNRyxTQUFTLEdBQUdDLGlCQUFLQyxZQUFMLENBQWtCSCxHQUFsQixDQUFsQjs7QUFDQSxNQUFNSSxFQUFFLEdBQUdMLE9BQU8sQ0FBQyxXQUFELENBQVAsQ0FBcUJFLFNBQXJCLENBQVg7O0FBRUFELEVBQUFBLEdBQUcsQ0FBQ0ssR0FBSixDQUFRLEdBQVIsRUFBYTdCLFlBQWIsRUFoQzJCLENBaUMzQjtBQUVBOztBQUVBLE1BQU1rQixLQUFLLEdBQUdVLEVBQUUsQ0FBQ0UsT0FBSCxDQUFXQyxPQUFYLENBQW1CYixLQUFqQztBQUVBVSxFQUFBQSxFQUFFLENBQUNJLEVBQUgsQ0FBTSxZQUFOLEVBQW9CLFVBQUNDLE1BQUQ7QUFBQSxXQUFZLDZCQUFnQkEsTUFBaEIsRUFBd0JmLEtBQXhCLEVBQStCZ0IsZUFBL0IsQ0FBWjtBQUFBLEdBQXBCO0FBRUFULEVBQUFBLFNBQVMsQ0FBQ1UsTUFBVixDQUFpQmYsSUFBakIsRUFBdUIsWUFBTTtBQUMzQlosSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksbUNBQW1DVyxJQUEvQztBQUNELEdBRkQ7QUFHRCxDQTVDRCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvc29ubnkvRGVza3RvcC9rYXJhb2tlbml0ZS9zcmMvc2VydmVyLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBodHRwIGZyb20gJ2h0dHAnO1xuaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgeyBwYXJzZSB9IGZyb20gJ3VybCc7XG5pbXBvcnQgeyB2NCBhcyB1dWlkIH0gZnJvbSAndXVpZCc7XG5pbXBvcnQgbmV4dCBmcm9tICduZXh0JztcbmltcG9ydCB7IGluaXRpYWxpemVSb29tcyB9IGZyb20gJy4vcm9vbXMnO1xuaW1wb3J0IHsgZGlzcGF0Y2gsIGdldFN0YXRlIH0gZnJvbSAnLi4vc3RhdGUvc3RvcmUnO1xuXG5jb25zdCBuZXh0QXBwID0gbmV4dCh7XG4gIGRldjogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyxcbn0pO1xuXG5jb25zdCBoYW5kbGVyID0gbmV4dEFwcC5nZXRSZXF1ZXN0SGFuZGxlcigpO1xubmV4dEFwcC5wcmVwYXJlKCkudGhlbigoKSA9PiB7XG4gIGNvbnN0IGNsaWVudFJvdXRlciA9IFJvdXRlcigpO1xuICBjbGllbnRSb3V0ZXIuZ2V0KCcvKicsIChyZXEsIHJlcykgPT4ge1xuICAgIGNvbnN0IHBhcnNlZFVybCA9IHBhcnNlKHJlcS51cmwsIHRydWUpO1xuICAgIGNvbnN0IHsgcGF0aG5hbWUsIHF1ZXJ5IH0gPSBwYXJzZWRVcmw7XG4gICAgaWYgKHBhdGhuYW1lID09PSAnL2NyZWF0ZS1yb29tJykge1xuICAgICAgY29uc29sZS5sb2coJ1Jvb20gQ3JlYXRpb24nKTtcbiAgICAgIGNvbnN0IGlkID0gdXVpZCgpO1xuICAgICAgZGlzcGF0Y2goe1xuICAgICAgICB0eXBlOiAnQ1JFQVRFX1JPT00nLFxuICAgICAgICBwYXlsb2FkOiB7IGlkLCBob3N0SWQ6IHF1ZXJ5LnVzZXJuYW1lIH0sXG4gICAgICB9KTtcbiAgICAgIHJlcy5yZWRpcmVjdChgcm9vbS8ke2lkfWApO1xuICAgIH0gZWxzZSBpZiAocGF0aG5hbWUuaW5jbHVkZXMoJy9yb29tJykpIHtcbiAgICAgIGNvbnN0IFssICwgaWRdID0gcGF0aG5hbWUuc3BsaXQoJy8nKTtcbiAgICAgIGNvbnN0IHJvb21zID0gZ2V0U3RhdGUoJ2J5SWQnKTtcblxuICAgICAgbmV4dEFwcC5yZW5kZXIocmVxLCByZXMsIHBhdGhuYW1lKTtcbiAgICB9IGVsc2Uge1xuICAgICAgaGFuZGxlcihyZXEsIHJlcywgcGF0aG5hbWUpO1xuICAgIH1cbiAgfSk7XG5cbiAgLy8gR2V0IHBvcnQgb3IgZGVmYXVsdCB0byA4MDgwXG4gIGNvbnN0IHBvcnQgPSBwcm9jZXNzLmVudi5QT1JUIHx8IDMwMDA7XG5cbiAgY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbiAgY29uc3QgYXBwID0gZXhwcmVzcygpO1xuXG4gIGNvbnN0IHdlYlNlcnZlciA9IGh0dHAuY3JlYXRlU2VydmVyKGFwcCk7XG4gIGNvbnN0IGlvID0gcmVxdWlyZSgnc29ja2V0LmlvJykod2ViU2VydmVyKTtcblxuICBhcHAudXNlKCcvJywgY2xpZW50Um91dGVyKTtcbiAgLy8gbGlzdGVuIGZvciByZXF1ZXN0cyA6KVxuXG4gIC8vIFVwZ3JhZGVzIHRoZSBzZXJ2ZXIgdG8gYWNjZXB0IHdlYnNvY2tldHM6XG5cbiAgY29uc3Qgcm9vbXMgPSBpby5zb2NrZXRzLmFkYXB0ZXIucm9vbXM7XG5cbiAgaW8ub24oJ2Nvbm5lY3Rpb24nLCAoc29ja2V0KSA9PiBpbml0aWFsaXplUm9vbXMoc29ja2V0LCByb29tcywgZ2V0U3RhdGUpKTtcblxuICB3ZWJTZXJ2ZXIubGlzdGVuKHBvcnQsICgpID0+IHtcbiAgICBjb25zb2xlLmxvZygnbGlzdGVuaW5nIG9uIGh0dHA6Ly9sb2NhbGhvc3Q6JyArIHBvcnQpO1xuICB9KTtcbn0pO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "nextApp",
        "dev",
        "process",
        "env",
        "NODE_ENV",
        "handler",
        "getRequestHandler",
        "prepare",
        "then",
        "clientRouter",
        "get",
        "req",
        "res",
        "parsedUrl",
        "url",
        "pathname",
        "query",
        "console",
        "log",
        "id",
        "type",
        "payload",
        "hostId",
        "username",
        "redirect",
        "includes",
        "split",
        "rooms",
        "render",
        "port",
        "PORT",
        "express",
        "require",
        "app",
        "webServer",
        "http",
        "createServer",
        "io",
        "use",
        "sockets",
        "adapter",
        "on",
        "socket",
        "getState",
        "listen"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;AAEA,IAAMA,OAAO,GAAG,sBAAK;AACnBC,EAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB;AADX,CAAL,CAAhB;AAIA,IAAMC,OAAO,GAAGL,OAAO,CAACM,iBAAR,EAAhB;AACAN,OAAO,CAACO,OAAR,GAAkBC,IAAlB,CAAuB,YAAM;AAC3B,MAAMC,YAAY,GAAG,sBAArB;AACAA,EAAAA,YAAY,CAACC,GAAb,CAAiB,IAAjB,EAAuB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACnC,QAAMC,SAAS,GAAG,gBAAMF,GAAG,CAACG,GAAV,EAAe,IAAf,CAAlB;AACA,QAAQC,QAAR,GAA4BF,SAA5B,CAAQE,QAAR;AAAA,QAAkBC,KAAlB,GAA4BH,SAA5B,CAAkBG,KAAlB;;AACA,QAAID,QAAQ,KAAK,cAAjB,EAAiC;AAC/BE,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,UAAMC,EAAE,GAAG,eAAX;AACA,2BAAS;AACPC,QAAAA,IAAI,EAAE,aADC;AAEPC,QAAAA,OAAO,EAAE;AAAEF,UAAAA,EAAE,EAAFA,EAAF;AAAMG,UAAAA,MAAM,EAAEN,KAAK,CAACO;AAApB;AAFF,OAAT;AAIAX,MAAAA,GAAG,CAACY,QAAJ,gBAAqBL,EAArB;AACD,KARD,MAQO,IAAIJ,QAAQ,CAACU,QAAT,CAAkB,OAAlB,CAAJ,EAAgC;AACrC,4BAAiBV,QAAQ,CAACW,KAAT,CAAe,GAAf,CAAjB;AAAA;AAAA,UAAWP,GAAX;;AACA,UAAMQ,MAAK,GAAG,qBAAS,MAAT,CAAd;;AAEA3B,MAAAA,OAAO,CAAC4B,MAAR,CAAejB,GAAf,EAAoBC,GAApB,EAAyBG,QAAzB;AACD,KALM,MAKA;AACLV,MAAAA,OAAO,CAACM,GAAD,EAAMC,GAAN,EAAWG,QAAX,CAAP;AACD;AACF,GAnBD,EAF2B,CAuB3B;;AACA,MAAMc,IAAI,GAAG3B,OAAO,CAACC,GAAR,CAAY2B,IAAZ,IAAoB,IAAjC;;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,GAAG,GAAGF,OAAO,EAAnB;;AAEA,MAAMG,SAAS,GAAGC,iBAAKC,YAAL,CAAkBH,GAAlB,CAAlB;;AACA,MAAMI,EAAE,GAAGL,OAAO,CAAC,WAAD,CAAP,CAAqBE,SAArB,CAAX;;AAEAD,EAAAA,GAAG,CAACK,GAAJ,CAAQ,GAAR,EAAa7B,YAAb,EAhC2B,CAiC3B;AAEA;;AAEA,MAAMkB,KAAK,GAAGU,EAAE,CAACE,OAAH,CAAWC,OAAX,CAAmBb,KAAjC;AAEAU,EAAAA,EAAE,CAACI,EAAH,CAAM,YAAN,EAAoB,UAACC,MAAD;AAAA,WAAY,6BAAgBA,MAAhB,EAAwBf,KAAxB,EAA+BgB,eAA/B,CAAZ;AAAA,GAApB;AAEAT,EAAAA,SAAS,CAACU,MAAV,CAAiBf,IAAjB,EAAuB,YAAM;AAC3BZ,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAmCW,IAA/C;AACD,GAFD;AAGD,CA5CD",
      "sourceRoot": "/Users/sonny/Desktop/karaokenite/src/server/",
      "sourcesContent": [
        "import http from 'http';\nimport { Router } from 'express';\nimport { parse } from 'url';\nimport { v4 as uuid } from 'uuid';\nimport next from 'next';\nimport { initializeRooms } from './rooms';\nimport { dispatch, getState } from '../state/store';\n\nconst nextApp = next({\n  dev: process.env.NODE_ENV !== 'production',\n});\n\nconst handler = nextApp.getRequestHandler();\nnextApp.prepare().then(() => {\n  const clientRouter = Router();\n  clientRouter.get('/*', (req, res) => {\n    const parsedUrl = parse(req.url, true);\n    const { pathname, query } = parsedUrl;\n    if (pathname === '/create-room') {\n      console.log('Room Creation');\n      const id = uuid();\n      dispatch({\n        type: 'CREATE_ROOM',\n        payload: { id, hostId: query.username },\n      });\n      res.redirect(`room/${id}`);\n    } else if (pathname.includes('/room')) {\n      const [, , id] = pathname.split('/');\n      const rooms = getState('byId');\n\n      nextApp.render(req, res, pathname);\n    } else {\n      handler(req, res, pathname);\n    }\n  });\n\n  // Get port or default to 8080\n  const port = process.env.PORT || 3000;\n\n  const express = require('express');\n  const app = express();\n\n  const webServer = http.createServer(app);\n  const io = require('socket.io')(webServer);\n\n  app.use('/', clientRouter);\n  // listen for requests :)\n\n  // Upgrades the server to accept websockets:\n\n  const rooms = io.sockets.adapter.rooms;\n\n  io.on('connection', (socket) => initializeRooms(socket, rooms, getState));\n\n  webServer.listen(port, () => {\n    console.log('listening on http://localhost:' + port);\n  });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1626104260464
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/sonny/Desktop/karaokenite/src/server/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/sonny/Desktop/karaokenite\",\"filename\":\"/Users/sonny/Desktop/karaokenite/src/server/rooms.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/sonny/Desktop/karaokenite\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/sonny/Desktop/karaokenite/src/server/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/sonny/Desktop/karaokenite",
      "filename": "/Users/sonny/Desktop/karaokenite/src/server/rooms.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/sonny/Desktop/karaokenite",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/sonny/Desktop/karaokenite/src/server/rooms.js",
        "plugins": [
          "jsx",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/sonny/Desktop/karaokenite/src/server/rooms.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/sonny/Desktop/karaokenite/src/server/",
        "sourceFileName": "rooms.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar EVENTS = {\n  JOIN: 'join',\n  JOINED: 'joined',\n  READY: 'ready',\n  PLAY: 'play',\n  PAUSE: 'pause'\n};\n\nvar initializeRooms = function initializeRooms(socket, rooms, getState) {\n  console.log('User Connected:' + socket.id); // Triggered when a peer hits the join room button:\n\n  socket.on('join', function (roomName) {\n    var room = rooms.get(roomName); // room == undefined when no such room exists\n\n    socket.join(roomName);\n    socket.emit('joined', roomName, getState(['byId', roomName]));\n  }); // Triggered when the person who joined the room is ready to communicate:\n\n  socket.on('ready', function (roomName) {\n    console.log('Ready');\n    socket.broadcast.to(roomName).emit('ready'); // Informs the other peer in the room\n  }); //Triggered when a user presses the play button\n\n  socket.on('play', function (roomName) {\n    socket.broadcast.emit('play', roomName);\n  }); //Triggered when a user presses the pause button\n\n  socket.on('pause', function (roomName) {\n    socket.broadcast.emit('pause', roomName);\n  }); //Triggered when a user presses the volume + button\n\n  socket.on('volinc', function (roomName) {\n    socket.broadcast.emit('volinc', roomName);\n  }); //Triggered when a user presses the volume - button\n\n  socket.on('voldec', function (roomName) {\n    socket.broadcast.emit('voldec', roomName);\n  }); //Triggered when a user presses the volume + button\n\n  socket.on('next', function (roomName) {\n    socket.broadcast.emit('next', roomName); // socket.to(roomName).broadcast.emit(\"play\", roomName);\n  }); //Triggered when a user presses the volume - button\n\n  socket.on('prev', function (roomName) {\n    socket.broadcast.emit('prev', roomName);\n  }); // Triggered when servers gets an icecandidate from a peer in the room:\n\n  socket.on('candidate', function (candidate, roomName) {\n    console.log('Candidate');\n    console.log(candidate);\n    socket.broadcast.to(roomName).emit('candidate', candidate); // Sends Candidate to the other peer in the room\n  }); // Triggered when server gets an offer from a peer in the room:\n\n  socket.on('offer', function (offer, roomName) {\n    console.log('Offer');\n    console.log(offer);\n    socket.broadcast.to(roomName).emit('offer', offer); // Send Offer to the other peer in the room\n  }); // Triggered when server gets an answer from a peer in the room:\n\n  socket.on('answer', function (answer, roomName) {\n    console.log('Answer');\n    socket.broadcast.to(roomName).emit('answer', answer); // Sends Answer to the other peer in the room\n  });\n  socket.on('leave', function (roomName) {\n    socket.leave(roomName);\n    socket.broadcast.to(roomName).emit('leave');\n  });\n};\n\nmodule.exports = {\n  initializeRooms: initializeRooms\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvb21zLmpzIl0sIm5hbWVzIjpbIkVWRU5UUyIsIkpPSU4iLCJKT0lORUQiLCJSRUFEWSIsIlBMQVkiLCJQQVVTRSIsImluaXRpYWxpemVSb29tcyIsInNvY2tldCIsInJvb21zIiwiZ2V0U3RhdGUiLCJjb25zb2xlIiwibG9nIiwiaWQiLCJvbiIsInJvb21OYW1lIiwicm9vbSIsImdldCIsImpvaW4iLCJlbWl0IiwiYnJvYWRjYXN0IiwidG8iLCJjYW5kaWRhdGUiLCJvZmZlciIsImFuc3dlciIsImxlYXZlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxNQUFNLEdBQUc7QUFDYkMsRUFBQUEsSUFBSSxFQUFFLE1BRE87QUFFYkMsRUFBQUEsTUFBTSxFQUFFLFFBRks7QUFHYkMsRUFBQUEsS0FBSyxFQUFFLE9BSE07QUFJYkMsRUFBQUEsSUFBSSxFQUFFLE1BSk87QUFLYkMsRUFBQUEsS0FBSyxFQUFFO0FBTE0sQ0FBZjs7QUFRQSxJQUFNQyxlQUFlLEdBQUcsU0FBbEJBLGVBQWtCLENBQUNDLE1BQUQsRUFBU0MsS0FBVCxFQUFnQkMsUUFBaEIsRUFBNkI7QUFDbkRDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLG9CQUFvQkosTUFBTSxDQUFDSyxFQUF2QyxFQURtRCxDQUduRDs7QUFFQUwsRUFBQUEsTUFBTSxDQUFDTSxFQUFQLENBQVUsTUFBVixFQUFrQixVQUFVQyxRQUFWLEVBQW9CO0FBQ3BDLFFBQU1DLElBQUksR0FBR1AsS0FBSyxDQUFDUSxHQUFOLENBQVVGLFFBQVYsQ0FBYixDQURvQyxDQUdwQzs7QUFFQVAsSUFBQUEsTUFBTSxDQUFDVSxJQUFQLENBQVlILFFBQVo7QUFDQVAsSUFBQUEsTUFBTSxDQUFDVyxJQUFQLENBQVksUUFBWixFQUFzQkosUUFBdEIsRUFBZ0NMLFFBQVEsQ0FBQyxDQUFDLE1BQUQsRUFBU0ssUUFBVCxDQUFELENBQXhDO0FBQ0QsR0FQRCxFQUxtRCxDQWNuRDs7QUFDQVAsRUFBQUEsTUFBTSxDQUFDTSxFQUFQLENBQVUsT0FBVixFQUFtQixVQUFVQyxRQUFWLEVBQW9CO0FBQ3JDSixJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxPQUFaO0FBQ0FKLElBQUFBLE1BQU0sQ0FBQ1ksU0FBUCxDQUFpQkMsRUFBakIsQ0FBb0JOLFFBQXBCLEVBQThCSSxJQUE5QixDQUFtQyxPQUFuQyxFQUZxQyxDQUVRO0FBQzlDLEdBSEQsRUFmbUQsQ0FvQm5EOztBQUNBWCxFQUFBQSxNQUFNLENBQUNNLEVBQVAsQ0FBVSxNQUFWLEVBQWtCLFVBQVVDLFFBQVYsRUFBb0I7QUFDcENQLElBQUFBLE1BQU0sQ0FBQ1ksU0FBUCxDQUFpQkQsSUFBakIsQ0FBc0IsTUFBdEIsRUFBOEJKLFFBQTlCO0FBQ0QsR0FGRCxFQXJCbUQsQ0F5Qm5EOztBQUNBUCxFQUFBQSxNQUFNLENBQUNNLEVBQVAsQ0FBVSxPQUFWLEVBQW1CLFVBQVVDLFFBQVYsRUFBb0I7QUFDckNQLElBQUFBLE1BQU0sQ0FBQ1ksU0FBUCxDQUFpQkQsSUFBakIsQ0FBc0IsT0FBdEIsRUFBK0JKLFFBQS9CO0FBQ0QsR0FGRCxFQTFCbUQsQ0E4Qm5EOztBQUNBUCxFQUFBQSxNQUFNLENBQUNNLEVBQVAsQ0FBVSxRQUFWLEVBQW9CLFVBQVVDLFFBQVYsRUFBb0I7QUFDdENQLElBQUFBLE1BQU0sQ0FBQ1ksU0FBUCxDQUFpQkQsSUFBakIsQ0FBc0IsUUFBdEIsRUFBZ0NKLFFBQWhDO0FBQ0QsR0FGRCxFQS9CbUQsQ0FtQ25EOztBQUNBUCxFQUFBQSxNQUFNLENBQUNNLEVBQVAsQ0FBVSxRQUFWLEVBQW9CLFVBQVVDLFFBQVYsRUFBb0I7QUFDdENQLElBQUFBLE1BQU0sQ0FBQ1ksU0FBUCxDQUFpQkQsSUFBakIsQ0FBc0IsUUFBdEIsRUFBZ0NKLFFBQWhDO0FBQ0QsR0FGRCxFQXBDbUQsQ0F3Q25EOztBQUNBUCxFQUFBQSxNQUFNLENBQUNNLEVBQVAsQ0FBVSxNQUFWLEVBQWtCLFVBQVVDLFFBQVYsRUFBb0I7QUFDcENQLElBQUFBLE1BQU0sQ0FBQ1ksU0FBUCxDQUFpQkQsSUFBakIsQ0FBc0IsTUFBdEIsRUFBOEJKLFFBQTlCLEVBRG9DLENBRXBDO0FBQ0QsR0FIRCxFQXpDbUQsQ0E4Q25EOztBQUNBUCxFQUFBQSxNQUFNLENBQUNNLEVBQVAsQ0FBVSxNQUFWLEVBQWtCLFVBQVVDLFFBQVYsRUFBb0I7QUFDcENQLElBQUFBLE1BQU0sQ0FBQ1ksU0FBUCxDQUFpQkQsSUFBakIsQ0FBc0IsTUFBdEIsRUFBOEJKLFFBQTlCO0FBQ0QsR0FGRCxFQS9DbUQsQ0FtRG5EOztBQUVBUCxFQUFBQSxNQUFNLENBQUNNLEVBQVAsQ0FBVSxXQUFWLEVBQXVCLFVBQVVRLFNBQVYsRUFBcUJQLFFBQXJCLEVBQStCO0FBQ3BESixJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxXQUFaO0FBQ0FELElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZVSxTQUFaO0FBQ0FkLElBQUFBLE1BQU0sQ0FBQ1ksU0FBUCxDQUFpQkMsRUFBakIsQ0FBb0JOLFFBQXBCLEVBQThCSSxJQUE5QixDQUFtQyxXQUFuQyxFQUFnREcsU0FBaEQsRUFIb0QsQ0FHUTtBQUM3RCxHQUpELEVBckRtRCxDQTJEbkQ7O0FBRUFkLEVBQUFBLE1BQU0sQ0FBQ00sRUFBUCxDQUFVLE9BQVYsRUFBbUIsVUFBVVMsS0FBVixFQUFpQlIsUUFBakIsRUFBMkI7QUFDNUNKLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLE9BQVo7QUFDQUQsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlXLEtBQVo7QUFDQWYsSUFBQUEsTUFBTSxDQUFDWSxTQUFQLENBQWlCQyxFQUFqQixDQUFvQk4sUUFBcEIsRUFBOEJJLElBQTlCLENBQW1DLE9BQW5DLEVBQTRDSSxLQUE1QyxFQUg0QyxDQUdRO0FBQ3JELEdBSkQsRUE3RG1ELENBbUVuRDs7QUFFQWYsRUFBQUEsTUFBTSxDQUFDTSxFQUFQLENBQVUsUUFBVixFQUFvQixVQUFVVSxNQUFWLEVBQWtCVCxRQUFsQixFQUE0QjtBQUM5Q0osSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksUUFBWjtBQUNBSixJQUFBQSxNQUFNLENBQUNZLFNBQVAsQ0FBaUJDLEVBQWpCLENBQW9CTixRQUFwQixFQUE4QkksSUFBOUIsQ0FBbUMsUUFBbkMsRUFBNkNLLE1BQTdDLEVBRjhDLENBRVE7QUFDdkQsR0FIRDtBQUtBaEIsRUFBQUEsTUFBTSxDQUFDTSxFQUFQLENBQVUsT0FBVixFQUFtQixVQUFVQyxRQUFWLEVBQW9CO0FBQ3JDUCxJQUFBQSxNQUFNLENBQUNpQixLQUFQLENBQWFWLFFBQWI7QUFDQVAsSUFBQUEsTUFBTSxDQUFDWSxTQUFQLENBQWlCQyxFQUFqQixDQUFvQk4sUUFBcEIsRUFBOEJJLElBQTlCLENBQW1DLE9BQW5DO0FBQ0QsR0FIRDtBQUlELENBOUVEOztBQWdGQU8sTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2ZwQixFQUFBQSxlQUFlLEVBQWZBO0FBRGUsQ0FBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Nvbm55L0Rlc2t0b3Ava2FyYW9rZW5pdGUvc3JjL3NlcnZlci8iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBFVkVOVFMgPSB7XG4gIEpPSU46ICdqb2luJyxcbiAgSk9JTkVEOiAnam9pbmVkJyxcbiAgUkVBRFk6ICdyZWFkeScsXG4gIFBMQVk6ICdwbGF5JyxcbiAgUEFVU0U6ICdwYXVzZScsXG59O1xuXG5jb25zdCBpbml0aWFsaXplUm9vbXMgPSAoc29ja2V0LCByb29tcywgZ2V0U3RhdGUpID0+IHtcbiAgY29uc29sZS5sb2coJ1VzZXIgQ29ubmVjdGVkOicgKyBzb2NrZXQuaWQpO1xuXG4gIC8vIFRyaWdnZXJlZCB3aGVuIGEgcGVlciBoaXRzIHRoZSBqb2luIHJvb20gYnV0dG9uOlxuXG4gIHNvY2tldC5vbignam9pbicsIGZ1bmN0aW9uIChyb29tTmFtZSkge1xuICAgIGNvbnN0IHJvb20gPSByb29tcy5nZXQocm9vbU5hbWUpO1xuXG4gICAgLy8gcm9vbSA9PSB1bmRlZmluZWQgd2hlbiBubyBzdWNoIHJvb20gZXhpc3RzXG5cbiAgICBzb2NrZXQuam9pbihyb29tTmFtZSk7XG4gICAgc29ja2V0LmVtaXQoJ2pvaW5lZCcsIHJvb21OYW1lLCBnZXRTdGF0ZShbJ2J5SWQnLCByb29tTmFtZV0pKTtcbiAgfSk7XG5cbiAgLy8gVHJpZ2dlcmVkIHdoZW4gdGhlIHBlcnNvbiB3aG8gam9pbmVkIHRoZSByb29tIGlzIHJlYWR5IHRvIGNvbW11bmljYXRlOlxuICBzb2NrZXQub24oJ3JlYWR5JywgZnVuY3Rpb24gKHJvb21OYW1lKSB7XG4gICAgY29uc29sZS5sb2coJ1JlYWR5Jyk7XG4gICAgc29ja2V0LmJyb2FkY2FzdC50byhyb29tTmFtZSkuZW1pdCgncmVhZHknKTsgLy8gSW5mb3JtcyB0aGUgb3RoZXIgcGVlciBpbiB0aGUgcm9vbVxuICB9KTtcblxuICAvL1RyaWdnZXJlZCB3aGVuIGEgdXNlciBwcmVzc2VzIHRoZSBwbGF5IGJ1dHRvblxuICBzb2NrZXQub24oJ3BsYXknLCBmdW5jdGlvbiAocm9vbU5hbWUpIHtcbiAgICBzb2NrZXQuYnJvYWRjYXN0LmVtaXQoJ3BsYXknLCByb29tTmFtZSk7XG4gIH0pO1xuXG4gIC8vVHJpZ2dlcmVkIHdoZW4gYSB1c2VyIHByZXNzZXMgdGhlIHBhdXNlIGJ1dHRvblxuICBzb2NrZXQub24oJ3BhdXNlJywgZnVuY3Rpb24gKHJvb21OYW1lKSB7XG4gICAgc29ja2V0LmJyb2FkY2FzdC5lbWl0KCdwYXVzZScsIHJvb21OYW1lKTtcbiAgfSk7XG5cbiAgLy9UcmlnZ2VyZWQgd2hlbiBhIHVzZXIgcHJlc3NlcyB0aGUgdm9sdW1lICsgYnV0dG9uXG4gIHNvY2tldC5vbigndm9saW5jJywgZnVuY3Rpb24gKHJvb21OYW1lKSB7XG4gICAgc29ja2V0LmJyb2FkY2FzdC5lbWl0KCd2b2xpbmMnLCByb29tTmFtZSk7XG4gIH0pO1xuXG4gIC8vVHJpZ2dlcmVkIHdoZW4gYSB1c2VyIHByZXNzZXMgdGhlIHZvbHVtZSAtIGJ1dHRvblxuICBzb2NrZXQub24oJ3ZvbGRlYycsIGZ1bmN0aW9uIChyb29tTmFtZSkge1xuICAgIHNvY2tldC5icm9hZGNhc3QuZW1pdCgndm9sZGVjJywgcm9vbU5hbWUpO1xuICB9KTtcblxuICAvL1RyaWdnZXJlZCB3aGVuIGEgdXNlciBwcmVzc2VzIHRoZSB2b2x1bWUgKyBidXR0b25cbiAgc29ja2V0Lm9uKCduZXh0JywgZnVuY3Rpb24gKHJvb21OYW1lKSB7XG4gICAgc29ja2V0LmJyb2FkY2FzdC5lbWl0KCduZXh0Jywgcm9vbU5hbWUpO1xuICAgIC8vIHNvY2tldC50byhyb29tTmFtZSkuYnJvYWRjYXN0LmVtaXQoXCJwbGF5XCIsIHJvb21OYW1lKTtcbiAgfSk7XG5cbiAgLy9UcmlnZ2VyZWQgd2hlbiBhIHVzZXIgcHJlc3NlcyB0aGUgdm9sdW1lIC0gYnV0dG9uXG4gIHNvY2tldC5vbigncHJldicsIGZ1bmN0aW9uIChyb29tTmFtZSkge1xuICAgIHNvY2tldC5icm9hZGNhc3QuZW1pdCgncHJldicsIHJvb21OYW1lKTtcbiAgfSk7XG5cbiAgLy8gVHJpZ2dlcmVkIHdoZW4gc2VydmVycyBnZXRzIGFuIGljZWNhbmRpZGF0ZSBmcm9tIGEgcGVlciBpbiB0aGUgcm9vbTpcblxuICBzb2NrZXQub24oJ2NhbmRpZGF0ZScsIGZ1bmN0aW9uIChjYW5kaWRhdGUsIHJvb21OYW1lKSB7XG4gICAgY29uc29sZS5sb2coJ0NhbmRpZGF0ZScpO1xuICAgIGNvbnNvbGUubG9nKGNhbmRpZGF0ZSk7XG4gICAgc29ja2V0LmJyb2FkY2FzdC50byhyb29tTmFtZSkuZW1pdCgnY2FuZGlkYXRlJywgY2FuZGlkYXRlKTsgLy8gU2VuZHMgQ2FuZGlkYXRlIHRvIHRoZSBvdGhlciBwZWVyIGluIHRoZSByb29tXG4gIH0pO1xuXG4gIC8vIFRyaWdnZXJlZCB3aGVuIHNlcnZlciBnZXRzIGFuIG9mZmVyIGZyb20gYSBwZWVyIGluIHRoZSByb29tOlxuXG4gIHNvY2tldC5vbignb2ZmZXInLCBmdW5jdGlvbiAob2ZmZXIsIHJvb21OYW1lKSB7XG4gICAgY29uc29sZS5sb2coJ09mZmVyJyk7XG4gICAgY29uc29sZS5sb2cob2ZmZXIpO1xuICAgIHNvY2tldC5icm9hZGNhc3QudG8ocm9vbU5hbWUpLmVtaXQoJ29mZmVyJywgb2ZmZXIpOyAvLyBTZW5kIE9mZmVyIHRvIHRoZSBvdGhlciBwZWVyIGluIHRoZSByb29tXG4gIH0pO1xuXG4gIC8vIFRyaWdnZXJlZCB3aGVuIHNlcnZlciBnZXRzIGFuIGFuc3dlciBmcm9tIGEgcGVlciBpbiB0aGUgcm9vbTpcblxuICBzb2NrZXQub24oJ2Fuc3dlcicsIGZ1bmN0aW9uIChhbnN3ZXIsIHJvb21OYW1lKSB7XG4gICAgY29uc29sZS5sb2coJ0Fuc3dlcicpO1xuICAgIHNvY2tldC5icm9hZGNhc3QudG8ocm9vbU5hbWUpLmVtaXQoJ2Fuc3dlcicsIGFuc3dlcik7IC8vIFNlbmRzIEFuc3dlciB0byB0aGUgb3RoZXIgcGVlciBpbiB0aGUgcm9vbVxuICB9KTtcblxuICBzb2NrZXQub24oJ2xlYXZlJywgZnVuY3Rpb24gKHJvb21OYW1lKSB7XG4gICAgc29ja2V0LmxlYXZlKHJvb21OYW1lKTtcbiAgICBzb2NrZXQuYnJvYWRjYXN0LnRvKHJvb21OYW1lKS5lbWl0KCdsZWF2ZScpO1xuICB9KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBpbml0aWFsaXplUm9vbXMsXG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "rooms.js"
      ],
      "names": [
        "EVENTS",
        "JOIN",
        "JOINED",
        "READY",
        "PLAY",
        "PAUSE",
        "initializeRooms",
        "socket",
        "rooms",
        "getState",
        "console",
        "log",
        "id",
        "on",
        "roomName",
        "room",
        "get",
        "join",
        "emit",
        "broadcast",
        "to",
        "candidate",
        "offer",
        "answer",
        "leave",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAE,MADO;AAEbC,EAAAA,MAAM,EAAE,QAFK;AAGbC,EAAAA,KAAK,EAAE,OAHM;AAIbC,EAAAA,IAAI,EAAE,MAJO;AAKbC,EAAAA,KAAK,EAAE;AALM,CAAf;;AAQA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,MAAD,EAASC,KAAT,EAAgBC,QAAhB,EAA6B;AACnDC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBJ,MAAM,CAACK,EAAvC,EADmD,CAGnD;;AAEAL,EAAAA,MAAM,CAACM,EAAP,CAAU,MAAV,EAAkB,UAAUC,QAAV,EAAoB;AACpC,QAAMC,IAAI,GAAGP,KAAK,CAACQ,GAAN,CAAUF,QAAV,CAAb,CADoC,CAGpC;;AAEAP,IAAAA,MAAM,CAACU,IAAP,CAAYH,QAAZ;AACAP,IAAAA,MAAM,CAACW,IAAP,CAAY,QAAZ,EAAsBJ,QAAtB,EAAgCL,QAAQ,CAAC,CAAC,MAAD,EAASK,QAAT,CAAD,CAAxC;AACD,GAPD,EALmD,CAcnD;;AACAP,EAAAA,MAAM,CAACM,EAAP,CAAU,OAAV,EAAmB,UAAUC,QAAV,EAAoB;AACrCJ,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAJ,IAAAA,MAAM,CAACY,SAAP,CAAiBC,EAAjB,CAAoBN,QAApB,EAA8BI,IAA9B,CAAmC,OAAnC,EAFqC,CAEQ;AAC9C,GAHD,EAfmD,CAoBnD;;AACAX,EAAAA,MAAM,CAACM,EAAP,CAAU,MAAV,EAAkB,UAAUC,QAAV,EAAoB;AACpCP,IAAAA,MAAM,CAACY,SAAP,CAAiBD,IAAjB,CAAsB,MAAtB,EAA8BJ,QAA9B;AACD,GAFD,EArBmD,CAyBnD;;AACAP,EAAAA,MAAM,CAACM,EAAP,CAAU,OAAV,EAAmB,UAAUC,QAAV,EAAoB;AACrCP,IAAAA,MAAM,CAACY,SAAP,CAAiBD,IAAjB,CAAsB,OAAtB,EAA+BJ,QAA/B;AACD,GAFD,EA1BmD,CA8BnD;;AACAP,EAAAA,MAAM,CAACM,EAAP,CAAU,QAAV,EAAoB,UAAUC,QAAV,EAAoB;AACtCP,IAAAA,MAAM,CAACY,SAAP,CAAiBD,IAAjB,CAAsB,QAAtB,EAAgCJ,QAAhC;AACD,GAFD,EA/BmD,CAmCnD;;AACAP,EAAAA,MAAM,CAACM,EAAP,CAAU,QAAV,EAAoB,UAAUC,QAAV,EAAoB;AACtCP,IAAAA,MAAM,CAACY,SAAP,CAAiBD,IAAjB,CAAsB,QAAtB,EAAgCJ,QAAhC;AACD,GAFD,EApCmD,CAwCnD;;AACAP,EAAAA,MAAM,CAACM,EAAP,CAAU,MAAV,EAAkB,UAAUC,QAAV,EAAoB;AACpCP,IAAAA,MAAM,CAACY,SAAP,CAAiBD,IAAjB,CAAsB,MAAtB,EAA8BJ,QAA9B,EADoC,CAEpC;AACD,GAHD,EAzCmD,CA8CnD;;AACAP,EAAAA,MAAM,CAACM,EAAP,CAAU,MAAV,EAAkB,UAAUC,QAAV,EAAoB;AACpCP,IAAAA,MAAM,CAACY,SAAP,CAAiBD,IAAjB,CAAsB,MAAtB,EAA8BJ,QAA9B;AACD,GAFD,EA/CmD,CAmDnD;;AAEAP,EAAAA,MAAM,CAACM,EAAP,CAAU,WAAV,EAAuB,UAAUQ,SAAV,EAAqBP,QAArB,EAA+B;AACpDJ,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYU,SAAZ;AACAd,IAAAA,MAAM,CAACY,SAAP,CAAiBC,EAAjB,CAAoBN,QAApB,EAA8BI,IAA9B,CAAmC,WAAnC,EAAgDG,SAAhD,EAHoD,CAGQ;AAC7D,GAJD,EArDmD,CA2DnD;;AAEAd,EAAAA,MAAM,CAACM,EAAP,CAAU,OAAV,EAAmB,UAAUS,KAAV,EAAiBR,QAAjB,EAA2B;AAC5CJ,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYW,KAAZ;AACAf,IAAAA,MAAM,CAACY,SAAP,CAAiBC,EAAjB,CAAoBN,QAApB,EAA8BI,IAA9B,CAAmC,OAAnC,EAA4CI,KAA5C,EAH4C,CAGQ;AACrD,GAJD,EA7DmD,CAmEnD;;AAEAf,EAAAA,MAAM,CAACM,EAAP,CAAU,QAAV,EAAoB,UAAUU,MAAV,EAAkBT,QAAlB,EAA4B;AAC9CJ,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAJ,IAAAA,MAAM,CAACY,SAAP,CAAiBC,EAAjB,CAAoBN,QAApB,EAA8BI,IAA9B,CAAmC,QAAnC,EAA6CK,MAA7C,EAF8C,CAEQ;AACvD,GAHD;AAKAhB,EAAAA,MAAM,CAACM,EAAP,CAAU,OAAV,EAAmB,UAAUC,QAAV,EAAoB;AACrCP,IAAAA,MAAM,CAACiB,KAAP,CAAaV,QAAb;AACAP,IAAAA,MAAM,CAACY,SAAP,CAAiBC,EAAjB,CAAoBN,QAApB,EAA8BI,IAA9B,CAAmC,OAAnC;AACD,GAHD;AAID,CA9ED;;AAgFAO,MAAM,CAACC,OAAP,GAAiB;AACfpB,EAAAA,eAAe,EAAfA;AADe,CAAjB",
      "sourceRoot": "/Users/sonny/Desktop/karaokenite/src/server/",
      "sourcesContent": [
        "const EVENTS = {\n  JOIN: 'join',\n  JOINED: 'joined',\n  READY: 'ready',\n  PLAY: 'play',\n  PAUSE: 'pause',\n};\n\nconst initializeRooms = (socket, rooms, getState) => {\n  console.log('User Connected:' + socket.id);\n\n  // Triggered when a peer hits the join room button:\n\n  socket.on('join', function (roomName) {\n    const room = rooms.get(roomName);\n\n    // room == undefined when no such room exists\n\n    socket.join(roomName);\n    socket.emit('joined', roomName, getState(['byId', roomName]));\n  });\n\n  // Triggered when the person who joined the room is ready to communicate:\n  socket.on('ready', function (roomName) {\n    console.log('Ready');\n    socket.broadcast.to(roomName).emit('ready'); // Informs the other peer in the room\n  });\n\n  //Triggered when a user presses the play button\n  socket.on('play', function (roomName) {\n    socket.broadcast.emit('play', roomName);\n  });\n\n  //Triggered when a user presses the pause button\n  socket.on('pause', function (roomName) {\n    socket.broadcast.emit('pause', roomName);\n  });\n\n  //Triggered when a user presses the volume + button\n  socket.on('volinc', function (roomName) {\n    socket.broadcast.emit('volinc', roomName);\n  });\n\n  //Triggered when a user presses the volume - button\n  socket.on('voldec', function (roomName) {\n    socket.broadcast.emit('voldec', roomName);\n  });\n\n  //Triggered when a user presses the volume + button\n  socket.on('next', function (roomName) {\n    socket.broadcast.emit('next', roomName);\n    // socket.to(roomName).broadcast.emit(\"play\", roomName);\n  });\n\n  //Triggered when a user presses the volume - button\n  socket.on('prev', function (roomName) {\n    socket.broadcast.emit('prev', roomName);\n  });\n\n  // Triggered when servers gets an icecandidate from a peer in the room:\n\n  socket.on('candidate', function (candidate, roomName) {\n    console.log('Candidate');\n    console.log(candidate);\n    socket.broadcast.to(roomName).emit('candidate', candidate); // Sends Candidate to the other peer in the room\n  });\n\n  // Triggered when server gets an offer from a peer in the room:\n\n  socket.on('offer', function (offer, roomName) {\n    console.log('Offer');\n    console.log(offer);\n    socket.broadcast.to(roomName).emit('offer', offer); // Send Offer to the other peer in the room\n  });\n\n  // Triggered when server gets an answer from a peer in the room:\n\n  socket.on('answer', function (answer, roomName) {\n    console.log('Answer');\n    socket.broadcast.to(roomName).emit('answer', answer); // Sends Answer to the other peer in the room\n  });\n\n  socket.on('leave', function (roomName) {\n    socket.leave(roomName);\n    socket.broadcast.to(roomName).emit('leave');\n  });\n};\n\nmodule.exports = {\n  initializeRooms,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1626104260465
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/sonny/Desktop/karaokenite/src/state/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/sonny/Desktop/karaokenite\",\"filename\":\"/Users/sonny/Desktop/karaokenite/src/state/store.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/sonny/Desktop/karaokenite\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"runtime\":\"classic\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-react-pure-annotations\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/sonny/Desktop/karaokenite/src/state/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/sonny/Desktop/karaokenite",
      "filename": "/Users/sonny/Desktop/karaokenite/src/state/store.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/sonny/Desktop/karaokenite",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "runtime": "classic",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-react-pure-annotations",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/sonny/Desktop/karaokenite/src/state/store.js",
        "plugins": [
          "jsx",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/sonny/Desktop/karaokenite/src/state/store.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/sonny/Desktop/karaokenite/src/state/",
        "sourceFileName": "store.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getState = exports.dispatch = exports.store = void 0;\n\nvar _toolkit = require(\"@reduxjs/toolkit\");\n\nvar _lodash = require(\"lodash\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar INITIAL_STATE = {\n  byId: {}\n};\n\nvar logger = function logger(_ref) {\n  var getState = _ref.getState;\n  return function (next) {\n    return function (action) {\n      console.log(\"Dispatching \".concat(action.type, \":\"), action);\n      var returnValue = next(action);\n      console.log('Next State:', getState());\n      return returnValue;\n    };\n  };\n}; // Triggered when a client is connected:\n\n\nvar roomReducer = function roomReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'CREATE_ROOM':\n      {\n        var _action$payload = action.payload,\n            _id = _action$payload.id,\n            hostId = _action$payload.hostId;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          byId: _defineProperty({}, _id, {\n            messages: [],\n            host: hostId,\n            users: _defineProperty({}, hostId, {})\n          })\n        });\n      }\n\n    case 'JOIN_ROOM':\n      {\n        var userId = action.payload.userId;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          byId: _objectSpread(_objectSpread({}, state.byId), {}, _defineProperty({}, id, _objectSpread(_objectSpread({}, state.byId[id]), {}, {\n            users: _objectSpread(_objectSpread({}, state.byId[id].users), {}, _defineProperty({}, userId, {}))\n          })))\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nvar store = (0, _toolkit.configureStore)({\n  reducer: roomReducer,\n  middleware: [logger]\n});\nexports.store = store;\nvar dispatch = store.dispatch;\nexports.dispatch = dispatch;\n\nvar getState = function getState(lookup, fallback) {\n  return (0, _lodash.get)(store.getState(), lookup, fallback);\n};\n\nexports.getState = getState;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0b3JlLmpzIl0sIm5hbWVzIjpbIklOSVRJQUxfU1RBVEUiLCJieUlkIiwibG9nZ2VyIiwiZ2V0U3RhdGUiLCJuZXh0IiwiYWN0aW9uIiwiY29uc29sZSIsImxvZyIsInR5cGUiLCJyZXR1cm5WYWx1ZSIsInJvb21SZWR1Y2VyIiwic3RhdGUiLCJwYXlsb2FkIiwiaWQiLCJob3N0SWQiLCJtZXNzYWdlcyIsImhvc3QiLCJ1c2VycyIsInVzZXJJZCIsInN0b3JlIiwicmVkdWNlciIsIm1pZGRsZXdhcmUiLCJkaXNwYXRjaCIsImxvb2t1cCIsImZhbGxiYWNrIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7Ozs7O0FBQ0EsSUFBTUEsYUFBYSxHQUFHO0FBQ3BCQyxFQUFBQSxJQUFJLEVBQUU7QUFEYyxDQUF0Qjs7QUFJQSxJQUFNQyxNQUFNLEdBQUcsU0FBVEEsTUFBUyxPQUFrQjtBQUFBLE1BQWZDLFFBQWUsUUFBZkEsUUFBZTtBQUMvQixTQUFPLFVBQUNDLElBQUQ7QUFBQSxXQUFVLFVBQUNDLE1BQUQsRUFBWTtBQUMzQkMsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLHVCQUEyQkYsTUFBTSxDQUFDRyxJQUFsQyxRQUEyQ0gsTUFBM0M7QUFDQSxVQUFNSSxXQUFXLEdBQUdMLElBQUksQ0FBQ0MsTUFBRCxDQUF4QjtBQUNBQyxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxhQUFaLEVBQTJCSixRQUFRLEVBQW5DO0FBQ0EsYUFBT00sV0FBUDtBQUNELEtBTE07QUFBQSxHQUFQO0FBTUQsQ0FQRCxDLENBU0E7OztBQUNBLElBQU1DLFdBQVcsR0FBRyxTQUFkQSxXQUFjLEdBQW1DO0FBQUEsTUFBbENDLEtBQWtDLHVFQUExQlgsYUFBMEI7QUFBQSxNQUFYSyxNQUFXOztBQUNyRCxVQUFRQSxNQUFNLENBQUNHLElBQWY7QUFDRSxTQUFLLGFBQUw7QUFBb0I7QUFDbEIsOEJBQXVCSCxNQUFNLENBQUNPLE9BQTlCO0FBQUEsWUFBUUMsR0FBUixtQkFBUUEsRUFBUjtBQUFBLFlBQVlDLE1BQVosbUJBQVlBLE1BQVo7QUFDQSwrQ0FDS0gsS0FETDtBQUVFVixVQUFBQSxJQUFJLHNCQUNEWSxHQURDLEVBQ0k7QUFDSkUsWUFBQUEsUUFBUSxFQUFFLEVBRE47QUFFSkMsWUFBQUEsSUFBSSxFQUFFRixNQUZGO0FBR0pHLFlBQUFBLEtBQUssc0JBQ0ZILE1BREUsRUFDTyxFQURQO0FBSEQsV0FESjtBQUZOO0FBWUQ7O0FBQ0QsU0FBSyxXQUFMO0FBQWtCO0FBQ2hCLFlBQVFJLE1BQVIsR0FBbUJiLE1BQU0sQ0FBQ08sT0FBMUIsQ0FBUU0sTUFBUjtBQUNBLCtDQUNLUCxLQURMO0FBRUVWLFVBQUFBLElBQUksa0NBQ0NVLEtBQUssQ0FBQ1YsSUFEUCwyQkFFRFksRUFGQyxrQ0FHR0YsS0FBSyxDQUFDVixJQUFOLENBQVdZLEVBQVgsQ0FISDtBQUlBSSxZQUFBQSxLQUFLLGtDQUNBTixLQUFLLENBQUNWLElBQU4sQ0FBV1ksRUFBWCxFQUFlSSxLQURmLDJCQUVGQyxNQUZFLEVBRU8sRUFGUDtBQUpMO0FBRk47QUFhRDs7QUFDRDtBQUNFLGFBQU9QLEtBQVA7QUFqQ0o7QUFtQ0QsQ0FwQ0Q7O0FBc0NPLElBQU1RLEtBQUssR0FBRyw2QkFBZTtBQUNsQ0MsRUFBQUEsT0FBTyxFQUFFVixXQUR5QjtBQUVsQ1csRUFBQUEsVUFBVSxFQUFFLENBQUNuQixNQUFEO0FBRnNCLENBQWYsQ0FBZDs7QUFLQSxJQUFNb0IsUUFBUSxHQUFHSCxLQUFLLENBQUNHLFFBQXZCOzs7QUFDQSxJQUFNbkIsUUFBUSxHQUFHLFNBQVhBLFFBQVcsQ0FBQ29CLE1BQUQsRUFBU0MsUUFBVDtBQUFBLFNBQ3RCLGlCQUFJTCxLQUFLLENBQUNoQixRQUFOLEVBQUosRUFBc0JvQixNQUF0QixFQUE4QkMsUUFBOUIsQ0FEc0I7QUFBQSxDQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvc29ubnkvRGVza3RvcC9rYXJhb2tlbml0ZS9zcmMvc3RhdGUvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29uZmlndXJlU3RvcmUgfSBmcm9tICdAcmVkdXhqcy90b29sa2l0JztcbmltcG9ydCB7IGdldCB9IGZyb20gJ2xvZGFzaCc7XG5jb25zdCBJTklUSUFMX1NUQVRFID0ge1xuICBieUlkOiB7fSxcbn07XG5cbmNvbnN0IGxvZ2dlciA9ICh7IGdldFN0YXRlIH0pID0+IHtcbiAgcmV0dXJuIChuZXh0KSA9PiAoYWN0aW9uKSA9PiB7XG4gICAgY29uc29sZS5sb2coYERpc3BhdGNoaW5nICR7YWN0aW9uLnR5cGV9OmAsIGFjdGlvbik7XG4gICAgY29uc3QgcmV0dXJuVmFsdWUgPSBuZXh0KGFjdGlvbik7XG4gICAgY29uc29sZS5sb2coJ05leHQgU3RhdGU6JywgZ2V0U3RhdGUoKSk7XG4gICAgcmV0dXJuIHJldHVyblZhbHVlO1xuICB9O1xufTtcblxuLy8gVHJpZ2dlcmVkIHdoZW4gYSBjbGllbnQgaXMgY29ubmVjdGVkOlxuY29uc3Qgcm9vbVJlZHVjZXIgPSAoc3RhdGUgPSBJTklUSUFMX1NUQVRFLCBhY3Rpb24pID0+IHtcbiAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuICAgIGNhc2UgJ0NSRUFURV9ST09NJzoge1xuICAgICAgY29uc3QgeyBpZCwgaG9zdElkIH0gPSBhY3Rpb24ucGF5bG9hZDtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICBieUlkOiB7XG4gICAgICAgICAgW2lkXToge1xuICAgICAgICAgICAgbWVzc2FnZXM6IFtdLFxuICAgICAgICAgICAgaG9zdDogaG9zdElkLFxuICAgICAgICAgICAgdXNlcnM6IHtcbiAgICAgICAgICAgICAgW2hvc3RJZF06IHt9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgfTtcbiAgICB9XG4gICAgY2FzZSAnSk9JTl9ST09NJzoge1xuICAgICAgY29uc3QgeyB1c2VySWQgfSA9IGFjdGlvbi5wYXlsb2FkO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgIGJ5SWQ6IHtcbiAgICAgICAgICAuLi5zdGF0ZS5ieUlkLFxuICAgICAgICAgIFtpZF06IHtcbiAgICAgICAgICAgIC4uLnN0YXRlLmJ5SWRbaWRdLFxuICAgICAgICAgICAgdXNlcnM6IHtcbiAgICAgICAgICAgICAgLi4uc3RhdGUuYnlJZFtpZF0udXNlcnMsXG4gICAgICAgICAgICAgIFt1c2VySWRdOiB7fSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgIH07XG4gICAgfVxuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gc3RhdGU7XG4gIH1cbn07XG5cbmV4cG9ydCBjb25zdCBzdG9yZSA9IGNvbmZpZ3VyZVN0b3JlKHtcbiAgcmVkdWNlcjogcm9vbVJlZHVjZXIsXG4gIG1pZGRsZXdhcmU6IFtsb2dnZXJdLFxufSk7XG5cbmV4cG9ydCBjb25zdCBkaXNwYXRjaCA9IHN0b3JlLmRpc3BhdGNoO1xuZXhwb3J0IGNvbnN0IGdldFN0YXRlID0gKGxvb2t1cCwgZmFsbGJhY2spID0+XG4gIGdldChzdG9yZS5nZXRTdGF0ZSgpLCBsb29rdXAsIGZhbGxiYWNrKTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "store.js"
      ],
      "names": [
        "INITIAL_STATE",
        "byId",
        "logger",
        "getState",
        "next",
        "action",
        "console",
        "log",
        "type",
        "returnValue",
        "roomReducer",
        "state",
        "payload",
        "id",
        "hostId",
        "messages",
        "host",
        "users",
        "userId",
        "store",
        "reducer",
        "middleware",
        "dispatch",
        "lookup",
        "fallback"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;AACA,IAAMA,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAE;AADc,CAAtB;;AAIA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAC/B,SAAO,UAACC,IAAD;AAAA,WAAU,UAACC,MAAD,EAAY;AAC3BC,MAAAA,OAAO,CAACC,GAAR,uBAA2BF,MAAM,CAACG,IAAlC,QAA2CH,MAA3C;AACA,UAAMI,WAAW,GAAGL,IAAI,CAACC,MAAD,CAAxB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BJ,QAAQ,EAAnC;AACA,aAAOM,WAAP;AACD,KALM;AAAA,GAAP;AAMD,CAPD,C,CASA;;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAmC;AAAA,MAAlCC,KAAkC,uEAA1BX,aAA0B;AAAA,MAAXK,MAAW;;AACrD,UAAQA,MAAM,CAACG,IAAf;AACE,SAAK,aAAL;AAAoB;AAClB,8BAAuBH,MAAM,CAACO,OAA9B;AAAA,YAAQC,GAAR,mBAAQA,EAAR;AAAA,YAAYC,MAAZ,mBAAYA,MAAZ;AACA,+CACKH,KADL;AAEEV,UAAAA,IAAI,sBACDY,GADC,EACI;AACJE,YAAAA,QAAQ,EAAE,EADN;AAEJC,YAAAA,IAAI,EAAEF,MAFF;AAGJG,YAAAA,KAAK,sBACFH,MADE,EACO,EADP;AAHD,WADJ;AAFN;AAYD;;AACD,SAAK,WAAL;AAAkB;AAChB,YAAQI,MAAR,GAAmBb,MAAM,CAACO,OAA1B,CAAQM,MAAR;AACA,+CACKP,KADL;AAEEV,UAAAA,IAAI,kCACCU,KAAK,CAACV,IADP,2BAEDY,EAFC,kCAGGF,KAAK,CAACV,IAAN,CAAWY,EAAX,CAHH;AAIAI,YAAAA,KAAK,kCACAN,KAAK,CAACV,IAAN,CAAWY,EAAX,EAAeI,KADf,2BAEFC,MAFE,EAEO,EAFP;AAJL;AAFN;AAaD;;AACD;AACE,aAAOP,KAAP;AAjCJ;AAmCD,CApCD;;AAsCO,IAAMQ,KAAK,GAAG,6BAAe;AAClCC,EAAAA,OAAO,EAAEV,WADyB;AAElCW,EAAAA,UAAU,EAAE,CAACnB,MAAD;AAFsB,CAAf,CAAd;;AAKA,IAAMoB,QAAQ,GAAGH,KAAK,CAACG,QAAvB;;;AACA,IAAMnB,QAAQ,GAAG,SAAXA,QAAW,CAACoB,MAAD,EAASC,QAAT;AAAA,SACtB,iBAAIL,KAAK,CAAChB,QAAN,EAAJ,EAAsBoB,MAAtB,EAA8BC,QAA9B,CADsB;AAAA,CAAjB",
      "sourceRoot": "/Users/sonny/Desktop/karaokenite/src/state/",
      "sourcesContent": [
        "import { configureStore } from '@reduxjs/toolkit';\nimport { get } from 'lodash';\nconst INITIAL_STATE = {\n  byId: {},\n};\n\nconst logger = ({ getState }) => {\n  return (next) => (action) => {\n    console.log(`Dispatching ${action.type}:`, action);\n    const returnValue = next(action);\n    console.log('Next State:', getState());\n    return returnValue;\n  };\n};\n\n// Triggered when a client is connected:\nconst roomReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case 'CREATE_ROOM': {\n      const { id, hostId } = action.payload;\n      return {\n        ...state,\n        byId: {\n          [id]: {\n            messages: [],\n            host: hostId,\n            users: {\n              [hostId]: {},\n            },\n          },\n        },\n      };\n    }\n    case 'JOIN_ROOM': {\n      const { userId } = action.payload;\n      return {\n        ...state,\n        byId: {\n          ...state.byId,\n          [id]: {\n            ...state.byId[id],\n            users: {\n              ...state.byId[id].users,\n              [userId]: {},\n            },\n          },\n        },\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const store = configureStore({\n  reducer: roomReducer,\n  middleware: [logger],\n});\n\nexport const dispatch = store.dispatch;\nexport const getState = (lookup, fallback) =>\n  get(store.getState(), lookup, fallback);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1626104260465
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/sonny/Desktop/karaokenite/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/sonny/Desktop/karaokenite\",\"filename\":\"/Users/sonny/Desktop/karaokenite/next.config.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/sonny/Desktop/karaokenite\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/sonny/Desktop/karaokenite/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/sonny/Desktop/karaokenite",
      "filename": "/Users/sonny/Desktop/karaokenite/next.config.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/sonny/Desktop/karaokenite",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/sonny/Desktop/karaokenite/next.config.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/sonny/Desktop/karaokenite/next.config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/sonny/Desktop/karaokenite/",
        "sourceFileName": "next.config.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar path = require('path');\n\nmodule.exports = {\n  sassOptions: {\n    includePaths: [path.join(__dirname, 'src')]\n  },\n  distDir: 'dist/next',\n  webpack: function webpack(config) {\n    config.module.rules.push({\n      issuer: {\n        test: /\\.(js|ts)x?$/\n      },\n      test: /\\.svg$/,\n      use: ['@svgr/webpack', 'url-loader']\n    });\n    return config;\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5leHQuY29uZmlnLmpzIl0sIm5hbWVzIjpbInBhdGgiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsInNhc3NPcHRpb25zIiwiaW5jbHVkZVBhdGhzIiwiam9pbiIsIl9fZGlybmFtZSIsImRpc3REaXIiLCJ3ZWJwYWNrIiwiY29uZmlnIiwicnVsZXMiLCJwdXNoIiwiaXNzdWVyIiwidGVzdCIsInVzZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDZkMsRUFBQUEsV0FBVyxFQUFFO0FBQ1hDLElBQUFBLFlBQVksRUFBRSxDQUFDTCxJQUFJLENBQUNNLElBQUwsQ0FBVUMsU0FBVixFQUFxQixLQUFyQixDQUFEO0FBREgsR0FERTtBQUlmQyxFQUFBQSxPQUFPLEVBQUUsV0FKTTtBQUtmQyxFQUFBQSxPQUxlLG1CQUtQQyxNQUxPLEVBS0M7QUFDZEEsSUFBQUEsTUFBTSxDQUFDUixNQUFQLENBQWNTLEtBQWQsQ0FBb0JDLElBQXBCLENBQXlCO0FBQ3ZCQyxNQUFBQSxNQUFNLEVBQUU7QUFDTkMsUUFBQUEsSUFBSSxFQUFFO0FBREEsT0FEZTtBQUl2QkEsTUFBQUEsSUFBSSxFQUFFLFFBSmlCO0FBS3ZCQyxNQUFBQSxHQUFHLEVBQUUsQ0FBQyxlQUFELEVBQWtCLFlBQWxCO0FBTGtCLEtBQXpCO0FBUUEsV0FBT0wsTUFBUDtBQUNEO0FBZmMsQ0FBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL3Nvbm55L0Rlc2t0b3Ava2FyYW9rZW5pdGUvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHNhc3NPcHRpb25zOiB7XG4gICAgaW5jbHVkZVBhdGhzOiBbcGF0aC5qb2luKF9fZGlybmFtZSwgJ3NyYycpXSxcbiAgfSxcbiAgZGlzdERpcjogJ2Rpc3QvbmV4dCcsXG4gIHdlYnBhY2soY29uZmlnKSB7XG4gICAgY29uZmlnLm1vZHVsZS5ydWxlcy5wdXNoKHtcbiAgICAgIGlzc3Vlcjoge1xuICAgICAgICB0ZXN0OiAvXFwuKGpzfHRzKXg/JC8sXG4gICAgICB9LFxuICAgICAgdGVzdDogL1xcLnN2ZyQvLFxuICAgICAgdXNlOiBbJ0BzdmdyL3dlYnBhY2snLCAndXJsLWxvYWRlciddLFxuICAgIH0pO1xuXG4gICAgcmV0dXJuIGNvbmZpZztcbiAgfSxcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "next.config.js"
      ],
      "names": [
        "path",
        "require",
        "module",
        "exports",
        "sassOptions",
        "includePaths",
        "join",
        "__dirname",
        "distDir",
        "webpack",
        "config",
        "rules",
        "push",
        "issuer",
        "test",
        "use"
      ],
      "mappings": ";;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,WAAW,EAAE;AACXC,IAAAA,YAAY,EAAE,CAACL,IAAI,CAACM,IAAL,CAAUC,SAAV,EAAqB,KAArB,CAAD;AADH,GADE;AAIfC,EAAAA,OAAO,EAAE,WAJM;AAKfC,EAAAA,OALe,mBAKPC,MALO,EAKC;AACdA,IAAAA,MAAM,CAACR,MAAP,CAAcS,KAAd,CAAoBC,IAApB,CAAyB;AACvBC,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE;AADA,OADe;AAIvBA,MAAAA,IAAI,EAAE,QAJiB;AAKvBC,MAAAA,GAAG,EAAE,CAAC,eAAD,EAAkB,YAAlB;AALkB,KAAzB;AAQA,WAAOL,MAAP;AACD;AAfc,CAAjB",
      "sourceRoot": "/Users/sonny/Desktop/karaokenite/",
      "sourcesContent": [
        "const path = require('path');\n\nmodule.exports = {\n  sassOptions: {\n    includePaths: [path.join(__dirname, 'src')],\n  },\n  distDir: 'dist/next',\n  webpack(config) {\n    config.module.rules.push({\n      issuer: {\n        test: /\\.(js|ts)x?$/,\n      },\n      test: /\\.svg$/,\n      use: ['@svgr/webpack', 'url-loader'],\n    });\n\n    return config;\n  },\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1626104260452
  }
}